# test.conf - sample config used by unit tests in config_test.c
#
# this file is part of GLADD
#
# Copyright (c) 2012, 2013 Brett Sheffield <brett@gladserv.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program (see the file COPYING in the distribution).
# If not, see <http://www.gnu.org/licenses/>.

# This is a comment
debug		1
port		3000
daemon		1
pipelining	1
ssl		1
ssl-ca		/etc/ssl/certs/ca-certificates.crt
ssl-key		/path/to/ssl.key
ssl-cert	/path/to/ssl.crt
ssl-crl		/path/to/crl.pem
encoding	ISO-8859-1
url_default	/path/to/index.html
x-forward	1
xmlpath		/home/bacs/dev/gladbooksd/static/xml/

# previous line intentionally left blank
###############################################################################
# databases
db      db_fake     pg      localhost       gladd_fake
db      db_test     pg      localhost       gladd_test
db      db_test_my  my      localhost       gladd_test	myuser	mypass
db	ldap1       ldap    ldap://ldap.gladserv.com dc=gladserv,dc=com
db	ldap2       ldap    ldap://ldap.example.com dc=example,dc=com myuser mypass
db      db_test_tds tds     tdsserver       testtds	tdsuser	tdspass

###############################################################################
# urls
url     static  GET	/static/        static/
url     static  GET	/static2/       static2/
url     static  GET	/static3/       static3/
url     sqlview	GET	/sqlview/	db1 		sql1
url     sqlview	POST	/sqlview/	db1 		test
url	xmlpost	POST	/testxml/	db1 		xmlpost
url	xslpost	POST	/journal/	db1 		journal
url     xslt    GET	/xsltview/      db1		someview
url	upload	POST	/filestore/	/tmp/filestore/
url	plugin	GET	/plugin1/	echo "1234" | md5sum
url	plugin	POST	/plugin2/	/usr/bin/sort
url	proxy	GET	/report/*	http://192.168.0.1/
url	proxy	GET	/report2/*/*/	http://192.168.0.1/$1

###############################################################################
# acls
acl     GET	/static/secret.html     require	*
acl     GET	/static/*		allow 	*
acl	GET	/sqlview/		allow	*
acl	POST	/sqlview/		allow	*
acl	GET	/			deny	*

###############################################################################
# auth
auth	ldap	ldap	ldap1	ld_auth		uid
auth	user	user	*	*		*
auth	pam	pam	login	*		*
auth	fake	ldap	ldap1	ld_auth		uid

###############################################################################
# user
user	alpha	alphasecret
user	bravo	bravosecret
user	charlie	charliesecret

###############################################################################
# group
group	test1	alpha,bravo
group	test2	bravo,charlie

###############################################################################
# sql
sql	sql1	SELECT * FROM test
sql	sql2	SELECT * FROM test ORDER BY name DESC
sql	my	SELECT * FROM test
sql	pg	SELECT * FROM test
sql	tds	SELECT * FROM test
sql	ldap	ou=group
sql	ld_auth	ou=people

begin sql createaccount
INSERT INTO account
 (id, name) 
VALUES
 (0, 'Boris')
end sql createaccount

begin sql xmlpost

	<journal>;
	INSERT INTO journal(
	 description
	)
	VALUES(
	 '<<<field description>>>'
	)

	;<debit>;
	INSERT INTO ledger(
	 journal,
	 account,
	 debit
	)
	VALUES(
	 currval(pg_get_serial_sequence('journal', 'id')),
	 '<<<field account>>>',
	 '<<<field debit>>>'
	)
	;</debit>;

	;<credit>;
	INSERT INTO ledger(
	 journal,
	 account,
	 debit
	)
	VALUES(
	 currval(pg_get_serial_sequence('journal', 'id')),
	 '<<<field account>>>',
	 '<<<field credit>>>'
	)
	;</credit>;
	;</journal>;

end sql createaccount
